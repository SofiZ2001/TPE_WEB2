
------------------PRACTICO 4------------------
------------------PELICULA------------------
--1 Listar todas las películas que poseen entregas de películas de idioma inglés durante el año 2006.
SELECT DISTINCT p.codigo_pelicula, p.titulo
    FROM pelicula p
    JOIN renglon_entrega re
    ON p.codigo_pelicula = re.codigo_pelicula
    JOIN entrega e
    ON re.nro_entrega = e.nro_entrega
    WHERE p.idioma = 'Inglés'
    AND extract(year from e.fecha_entrega) = 2006;
SELECT DISTINCT p.codigo_pelicula, p.titulo
    FROM pelicula p
    JOIN renglon_entrega re
    ON p.codigo_pelicula = re.codigo_pelicula
    WHERE p.idioma = 'Inglés'
    AND re.nro_entrega IN(
        SELECT e.nro_entrega
            FROM entrega e
            WHERE extract(year FROM e.fecha_entrega) = 2011
        );
--2 Departamentos que no posean empleados cuya
    -- diferencia de sueldo máximo y mínimo (asociado a la tarea)
        --no supere el 30% del sueldo máximo.
SELECT DISTINCT d1.id_departamento, d1.nombre
    FROM departamento d1
    JOIN empleado e1
    ON d1.id_departamento = e1.id_departamento
    JOIN tarea t1
    ON e1.id_tarea = t1.id_tarea
    WHERE NOT((t1.sueldo_maximo-t1.sueldo_minimo) <= (t1.sueldo_maximo*0.30));
--3 Cantidad de películas
        --entregadas en 2006 por un distribuidor nacional.
SELECT count(*) as cantidad
    FROM entrega e1
    JOIN distribuidor d1
    ON(e1.id_distribuidor = d1.id_distribuidor)
    WHERE extract(year from e1.fecha_entrega) = 2006
    AND d1.tipo = 'N';
--4 Películas que nunca han sido entregadas por un distribuidor nacional.
SELECT titulo
    FROM pelicula p1
    JOIN renglon_entrega re1
    ON p1.codigo_pelicula = re1.codigo_pelicula
    JOIN entrega e1
    ON re1.nro_entrega = e1.nro_entrega
    JOIN distribuidor d1
    ON e1.id_distribuidor = d1.id_distribuidor
    WHERE tipo != 'N';
--5 Jefes que poseen personal a cargo id_jefe is not null
        --y cuyos departamentos se encuentren en la Argentina.
SELECT e1.id_empleado, e1.nombre
    FROM empleado e1
    JOIN departamento d1
    ON e1.id_departamento = d1.id_departamento
    JOIN ciudad c1
    ON d1.id_ciudad = c1.id_ciudad
    JOIN pais p1
    ON c1.id_pais = p1.id_pais
    WHERE e1.e_mail IS NOT NULL
    AND p1.nombre_pais = 'ARGENTINA';
--6 Apellido y nombre de los empleados
        --que pertenecen aquellos departamentos residentes en el país
            -- y donde el jefe de departamento posee más del 10% de comisión.
SELECT p.nombre_pais, e.nombre, e.apellido
    FROM empleado e
    JOIN departamento d
    ON e.id_departamento = d.id_departamento
    JOIN ciudad c
    ON d.id_ciudad = c.id_ciudad
    JOIN pais p
    ON c.id_pais = p.id_pais
    WHERE porc_comision > 10.0 and p.nombre_pais = 'ARGENTINA'
    GROUP BY p.nombre_pais, e.nombre, e.apellido;
--- Consultas que involucran agrupamiento:
--7 Cantidad de películas entregadas
        -- en los últimos 5 años
            --por género.
SELECT genero, count(*), e.fecha_entrega
    FROM pelicula p1
    JOIN renglon_entrega re1
    ON p1.codigo_pelicula = re1.codigo_pelicula
    JOIN entrega e
    ON re1.nro_entrega = e.nro_entrega
    GROUP BY p1.genero, e.fecha_entrega
    HAVING (extract(year FROM current_date) - extract(year FROM e.fecha_entrega))<=9;
select * from pelicula where genero = 'Aventura';
--8 Resumen de entregas por día
        --indicando el video club al cual se le realizó la entrega y la cantidad entregada
            --Ordenar el resultado por fecha.
SELECT e1.id_video, sum(cantidad) as cant_entrega, e1.fecha_entrega
    FROM entrega e1
    JOIN video v1
    ON e1.id_video = v1.id_video
    JOIN renglon_entrega re1
    ON e1.nro_entrega = re1.nro_entrega
    GROUP BY e1.id_video, e1.fecha_entrega
    ORDER BY e1.fecha_entrega DESC;
--9 Listar, para cada ciudad
        --el nombre de la ciudad
        --y la cantidad de empleados mayores de edad que desempeñan tareas en departamentos de la misma
        --y que posean al menos 30 empleados.
--empresas con mas de 30 empleados
SELECT c.nombre_ciudad, count(e.id_empleado) as cantidad_empleados
    FROM empleado e
    JOIN departamento d
    ON (e.id_departamento = d.id_departamento AND e.id_distribuidor = d.id_distribuidor)
    JOIN ciudad c
    ON d.id_ciudad = c.id_ciudad
    WHERE (extract(year FROM current_date) - extract (year FROM e.fecha_nacimiento)) >= 18
    GROUP BY d.id_departamento, c.nombre_ciudad
    ORDER BY cantidad_empleados, c.nombre_ciudad;
-- EJERCICIO 1.9
select c.nombre_ciudad, count(id_empleado) as cant_empleados
    from empleado e
    join departamento d
    on e.id_distribuidor = d.id_distribuidor
    --and empleado.id_departamento = departamento.id_departamento
    join ciudad c
    on d.id_ciudad = c.id_ciudad
    where extract(year from current_date) - extract(year from fecha_nacimiento) >= 18
--group by e.id_departamento, c.nombre_ciudad
--having count(id_empleado) > 30
--order by cant_empleados;
------------------VOLUNTARIO------------------
--1 Muestre, para cada institución
        --su nombre y la cantidad de voluntarios que realizan aportes
        --Ordene el resultado por nombre de institución.
--INSTITUCIONES CON VOLUNTARIOS > 0 Y HORAS APORTADAS > 0
SELECT i.id_institucion, i.nombre_institucion, count(*) as cantidad_voluntarios
    FROM institucion i
    JOIN voluntario v
    ON i.id_institucion = v.id_institucion
    WHERE v.horas_aportadas > 7000
    GROUP BY i.id_institucion, i.nombre_institucion
    ORDER BY i.nombre_institucion;
--2 Cantidad de coordinadores en cada país
        --agrupados por nombre de país y nombre de continente
            --Etiquete la primer columna como 'Número de coordinadores'
SELECT count(*) as numero_coordinadores, p.nombre_pais, c.nombre_continente
    FROM voluntario v
    JOIN institucion i
    ON v.id_institucion = i.id_institucion
    JOIN direccion d
    ON i.id_direccion = d.id_direccion
    JOIN pais p
    ON d.id_pais = p.id_pais
    JOIN continente c
    ON p.id_continente = c.id_continente
    WHERE v.id_coordinador IS NOT NULL
    GROUP BY p.nombre_pais, c.nombre_continente
    ORDER BY p.nombre_pais;
--3 Mostrar el apellido, nombre y fecha de nacimiento
        --de cualquier voluntario que trabaje en la misma institución que el Sr. Zlotkey
            --Excluya del resultado a Zlotkey.
SELECT v2.apellido, v2.nombre, v2.id_institucion
    FROM voluntario v2
    WHERE v2.apellido != 'Zlotkey'
    AND v2.id_institucion IN(
        SELECT v1.id_institucion
            FROM voluntario v1
            WHERE v1.apellido = 'Zlotkey'
    );
--4 Mostrar los números de voluntarios
    --y los apellidos de todos los voluntarios cuya cantidad de horas aportadas sea mayor que la media de las horas aportadas
        --Ordene los resultados por horas aportadas en orden ascendente.
SELECT nro_voluntario, apellido, horas_aportadas
    FROM voluntario
    WHERE horas_aportadas > (
        SELECT avg(horas_aportadas)
            FROM voluntario
    )
    ORDER BY horas_aportadas;